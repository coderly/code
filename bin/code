#!/usr/bin/env rvm 2.0.0@code do ruby

$: << File.join(File.dirname(__FILE__), '..', 'lib') # while this is still in development

require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'code'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/code` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/code now"
  exit 64
end

require 'code/git'

include GLI::App

program_desc 'The Coderly Toolbelt'

version Code::VERSION

desc 'Describe some switch here'
switch [:s,:switch]

desc 'Create a new feature branch'
arg_name 'The name of the feature'
command :start do |c|
  c.action do |global_options, options, (feature_name)|
    $git.start feature_name
  end
end

desc 'Upload your feature branch to GitHub'
command :publish do |c|
  c.action do |global_options, options, args|
    $git.publish
  end
end

desc "Push your current branch"
command :push do |c|
  c.action do |global_options, options, args|
    $git.push $git.current_branch
  end
end

desc 'Cleanup after a feature has been merged through GitHub'
command :finish do |c|
  c.action do |global_options, options, args|
    $git.finish
  end
end

desc 'Delete the branch you are working on and switch back to development'
command :cancel do |c|
  c.action do |global_options, options, args|
    $git.cancel
  end
end

command :switch do |c|
  c.action do |global_options, options, args|
    $git.switch(*args)
  end
end

pre do |global, command, options, args|
  $git = Code::Git.new
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
